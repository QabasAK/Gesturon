unsigned long T1counts;
unsigned long T1time;
unsigned long Distance;

void myDelay_us(unsigned int);
void myDelay_ms(unsigned int);

void initialization(void);


void init_sonar(void);
void read_sonar(void);

void main() {
    initialization();
    init_sonar();              // Initialize the ultrasonic sensor

    while (1) {
        read_sonar();          // Read distance from ultrasonic sensor

        // Control LEDs based on distance
        if (Distance < 10) {
            PORTD = 0xFF;  // All LEDs ON if distance is less than 10 cm
        } else if (Distance < 40) {
            PORTD = 0x0F;  // Half LEDs ON (lower 4 LEDs) if distance is 10-20 cm
        } else {
            PORTD = 0x00;  // All LEDs OFF if distance is greater than 20 cm
        }

        myDelay_ms(100);
    }
}
void initialization(void){
    TRISA = 0x10; // RA4 is input for tilt sensor
    PORTA = 0x00;

    TRISC = 0x81; // RC0 and RC7 are inputs for IR/RC
    PORTC = 0x00;

    TRISB = 0x14; // RB4 is Echo input, RB2 is Push button
    PORTB = 0x00;

    TRISD = 0x00; // PORTD as output (for LED display)
    PORTD = 0x00;
}

void read_sonar(void) {
    T1counts = 0;
    T1time = 0;
    Distance = 0;
    TMR1H = 0;
    TMR1L = 0;

    PORTB = 0x04;          // Trigger the ultrasonic sensor (RB2 connected to trigger)
    myDelay_us(10);           // Keep trigger for 10uS
    PORTB = 0x00;          // Remove trigger

    while (!(PORTB & 0x02));  // Wait until you start receiving the echo
    T1CON = 0x19;          // TMR1 ON, Fosc/4 (1uS increment) with 1:2 prescaler
    while (PORTB & 0x02);  // Wait until the pulse is received
    T1CON = 0x18;          // TMR1 OFF, Fosc/4 (1uS increment) with 1:1 prescaler

    T1counts = ((TMR1H << 8) | TMR1L);  // Get the count from Timer 1
    T1time = T1counts;     // In microseconds
    Distance = (T1time * 34) / (1000 * 2);  // Calculate distance in cm

    // Handle unreasonable distance (e.g., too large)
    if (Distance > 400) {
        Distance = 0;  // Invalid distance, reset to 0
    }
}

void init_sonar(void) {
    T1counts = 0;
    T1time = 0;
    Distance = 0;
    TMR1H = 0;
    TMR1L = 0;
    TRISB = 0x02;  // RB2 for trigger, RB1 for echo
    PORTB = 0x00;
    T1CON = 0x18;    // TMR1 OFF, Fosc/4 (1uS increment) with 1:2 prescaler
}

void myDelay_ms(unsigned int ms) {
    unsigned int i, j;
    for (i = 0; i < ms; i++) {
        for (j = 0; j < 250; j++);
    }
}
void myDelay_us(unsigned int us) {
    while (us--);
}
